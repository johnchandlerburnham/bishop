testDef(A: Type): Type {
  A
}

testLet : Type {
  let 1 x: Type = Type;
  Type
}

id<A>(x:A): A { x }

//selfRef : Type {
//  selfRef
//}

mkBool<B>(t:B, f:B): Type {
  @self
  (ght P: B -> Type, t: P t, f: P f) -> P self
}

testPrim : I64 {
  id I64 (#iadd 2 2)
}

testRed : I64 {
  ((x: I64) => (#iadd 2 x)) 1
}
